
Lab2_Assignment_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000112  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d6  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005de  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a2  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001164  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036a  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c4  00000000  00000000  00001522  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000015e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  64:	0c 94 87 00 	jmp	0x10e	; 0x10e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <GPIO_init>:

// ========================= Initialization =========================

void GPIO_init(){
	// Port A Output
	DDRA = 0xff;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	90 e0       	ldi	r25, 0x00	; 0
  70:	9b bb       	out	0x1b, r25	; 27
  72:	8a bb       	out	0x1a, r24	; 26
  74:	08 95       	ret

00000076 <LED_ON>:
}

// ========================= LED =========================

void LED_ON(int led){
	SET_BIT(PORTA, led);
  76:	2b b3       	in	r18, 0x1b	; 27
  78:	3c b3       	in	r19, 0x1c	; 28
  7a:	41 e0       	ldi	r20, 0x01	; 1
  7c:	50 e0       	ldi	r21, 0x00	; 0
  7e:	02 c0       	rjmp	.+4      	; 0x84 <LED_ON+0xe>
  80:	44 0f       	add	r20, r20
  82:	55 1f       	adc	r21, r21
  84:	8a 95       	dec	r24
  86:	e2 f7       	brpl	.-8      	; 0x80 <LED_ON+0xa>
  88:	24 2b       	or	r18, r20
  8a:	35 2b       	or	r19, r21
  8c:	3c bb       	out	0x1c, r19	; 28
  8e:	2b bb       	out	0x1b, r18	; 27
  90:	08 95       	ret

00000092 <LED_OFF>:
}


void LED_OFF(int led){
	CLEAR_BIT(PORTA, led);
  92:	4b b3       	in	r20, 0x1b	; 27
  94:	5c b3       	in	r21, 0x1c	; 28
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	30 e0       	ldi	r19, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <LED_OFF+0xe>
  9c:	22 0f       	add	r18, r18
  9e:	33 1f       	adc	r19, r19
  a0:	8a 95       	dec	r24
  a2:	e2 f7       	brpl	.-8      	; 0x9c <LED_OFF+0xa>
  a4:	20 95       	com	r18
  a6:	30 95       	com	r19
  a8:	24 23       	and	r18, r20
  aa:	35 23       	and	r19, r21
  ac:	3c bb       	out	0x1c, r19	; 28
  ae:	2b bb       	out	0x1b, r18	; 27
  b0:	08 95       	ret

000000b2 <main>:



int main(void)
{
    GPIO_init();
  b2:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_init>
	
	// All LEDs off
	PORTA = 0x0;
  b6:	1c ba       	out	0x1c, r1	; 28
  b8:	1b ba       	out	0x1b, r1	; 27
	
	int i;
    while (1) 
    {
		for (i=0; i<8; i++)
  ba:	c0 e0       	ldi	r28, 0x00	; 0
  bc:	d0 e0       	ldi	r29, 0x00	; 0
  be:	0d c0       	rjmp	.+26     	; 0xda <main+0x28>
		{
			LED_ON(i);
  c0:	ce 01       	movw	r24, r28
  c2:	0e 94 3b 00 	call	0x76	; 0x76 <LED_ON>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	2f e7       	ldi	r18, 0x7F	; 127
  c8:	88 e3       	ldi	r24, 0x38	; 56
  ca:	91 e0       	ldi	r25, 0x01	; 1
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	80 40       	sbci	r24, 0x00	; 0
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x1a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x24>
  d6:	00 00       	nop
	PORTA = 0x0;
	
	int i;
    while (1) 
    {
		for (i=0; i<8; i++)
  d8:	21 96       	adiw	r28, 0x01	; 1
  da:	c8 30       	cpi	r28, 0x08	; 8
  dc:	d1 05       	cpc	r29, r1
  de:	84 f3       	brlt	.-32     	; 0xc0 <main+0xe>
  e0:	c0 e0       	ldi	r28, 0x00	; 0
  e2:	d0 e0       	ldi	r29, 0x00	; 0
  e4:	10 c0       	rjmp	.+32     	; 0x106 <main+0x54>
			_delay_ms(50);
		}
		
		for (i=0; i<8; i++)
		{
			LED_OFF(7-i);
  e6:	87 e0       	ldi	r24, 0x07	; 7
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	8c 1b       	sub	r24, r28
  ec:	9d 0b       	sbc	r25, r29
  ee:	0e 94 49 00 	call	0x92	; 0x92 <LED_OFF>
  f2:	2f e7       	ldi	r18, 0x7F	; 127
  f4:	88 e3       	ldi	r24, 0x38	; 56
  f6:	91 e0       	ldi	r25, 0x01	; 1
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	90 40       	sbci	r25, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x46>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x50>
 102:	00 00       	nop
		{
			LED_ON(i);
			_delay_ms(50);
		}
		
		for (i=0; i<8; i++)
 104:	21 96       	adiw	r28, 0x01	; 1
 106:	c8 30       	cpi	r28, 0x08	; 8
 108:	d1 05       	cpc	r29, r1
 10a:	6c f3       	brlt	.-38     	; 0xe6 <main+0x34>
 10c:	d6 cf       	rjmp	.-84     	; 0xba <main+0x8>

0000010e <_exit>:
 10e:	f8 94       	cli

00000110 <__stop_program>:
 110:	ff cf       	rjmp	.-2      	; 0x110 <__stop_program>
